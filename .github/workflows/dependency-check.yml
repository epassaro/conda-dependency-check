name: dependency-check

on:
  schedule:
    - cron: '0 0 * * 0'

  workflow_dispatch:

env:
  ENVIRONMENT_FILE: 'example/environment.yml'

jobs:
  report:
    runs-on: ubuntu-latest

    permissions:
      issues: write

    defaults:
      run:
        shell: bash -el {0}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2

      - name: Create Report Environment
        run: |
          conda install -n base conda-libmamba-solver && conda config --set solver libmamba
          conda create -n jake python=3.10 jake=0.2.77 pandas=1.5.3 tabulate=0.8.10 -c conda-forge

      - name: Create Target Environment
        run: |
          conda env create -f ${{ env.ENVIRONMENT_FILE }}
          echo "ENVIRONMENT_NAME=$(yq e '.name' ${{ env.ENVIRONMENT_FILE }})" >> "$GITHUB_ENV"

      - name: Run Jake
        run: |
          conda activate jake
          conda list -n ${{ env.ENVIRONMENT_NAME }} | jake ddt -c -o report.json --output-format json > report.json

      - name: Generate Issue Content
        run: |
          conda activate jake
          python .ci-helpers/report.py -i report.json -o issue-body.md
          echo "CURRENT_DATE=$(date +'%b %d, %Y')" >> "$GITHUB_ENV"
        if: failure()

      - name: Create or Update Issue From File
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: Security alert updates (${{ env.CURRENT_DATE }})
          content-filepath: ./issue-body.md
          #issue-number: 0  # Update an existing issue instead of opening a new one
          labels: |
            report
            automated issue
        if: failure()
